name: Deploy Config

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm install

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Authenticate with Netlify
        run: netlify login --auth ${NETLIFY_AUTH_TOKEN}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Check if commit message contains '::auto-deploy::'
        id: check_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"

          if ! echo "$COMMIT_MESSAGE" | grep -q "::auto-deploy::"; then
            echo "Commit message does not contain '::auto-deploy::', skipping deployment."
            exit 0
          fi

          if [[ "$COMMIT_MESSAGE" =~ "::auto-deploy::[[:space:]]*>[[:space:]]*(.*)" ]]; then
            orgName="${BASH_REMATCH[1]}"
            echo "orgName=$orgName" >> $GITHUB_ENV
          else
            echo "orgName not found in commit message, skipping deployment."
            exit 0
          fi

      - name: Fetch GitHub repo details
        id: fetch_github_details
        run: |
          echo "GITPASS : ${{ secrets.ORG_GIT_PASS }}"
          REPO_ID=$(node getRepoId.js ${{ secrets.ORG_GIT_PASS }} namootatech/inaethe)
          echo "repo id: $REPO_DETAILS"
          echo "repo_id=$REPO_ID" >> $GITHUB_ENV

          INSTALLATION_ID=$(getInstallationId.js  ${{ secrets.ORG_GIT_PASS }} netlify  )
          echo "installation id: $INSTALLATION_ID" 
          echo "installation_id=$INSTALLATION_ID" >> $GITHUB_ENV

      - name: Create site on Netlify using API
        id: create_site
        run: |
          echo "INSTALATION ID:" ${{env.installation_id}} " -- REPO ID: ${{env.repo_id}} -- ORGNAME: ${orgName} -- TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}"
          node createNetlifySite.js ${{ secrets.NETLIFY_AUTH_TOKEN }} ${orgName} ${{env.installation_id}} ${{env.repo_id}}

        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          INSTALLATION_ID: ${{env.installation_id}}
          REPO_ID: ${{ env.repo_id }}

      - name: Trigger deploy
        run: netlify deploy --prod --trigger
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
